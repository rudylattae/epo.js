/**
 * tote - A thin namespaced wrapper for localStorage
 * @version v0.3.0-a
 * @link http://rudylattae.github.io/tote
 * @license MIT
 * @copyright Rudy Lattae <rudylattae@gmail.com>
 */
!function(e){"use strict";function t(t,o){if(!t||""===t)throw new Error("A tote must have a non-empty namespace");o=o||{};var u=o.storageAdapter||e.localStorage,i=o.index||r(t,u);return n(t,u,i)}function n(e,t,n){function r(t){return e+"-"+t}function o(){for(var e,o=n.all(),u=0,i=o.length;i>u;u++)e=o[u],t.removeItem(r(e));n.clear()}var u={setItem:function(e,o){n.add(e),t.setItem(r(e),JSON.stringify(o))},getItem:function(e){var n=t.getItem(r(e));return n&&"undefined"===n?n:JSON.parse(n)},removeItem:function(e){t.removeItem(r(e)),n.remove(e)},key:function(e){return n.getKeyAt(e)},length:function(){return n.length()},clear:function(){o()},all:function(){for(var e,t=[],r=n.all(),o=0,u=r.length;u>o;o++)e=r[o],t.push({key:e,value:this.getItem(e)});return t}};return u.set=u.setItem,u.get=u.getItem,u.remove=u.removeItem,u}function r(e,t){function n(){var n=t.getItem(e);o=n&&n.split(",")||[]}function r(){t.setItem(e,o.join(","))}var o=[];return{add:function(e){o.indexOf(e)<0&&(o.push(e),r())},remove:function(e){var t=o.indexOf(e);-1!==t&&o.splice(t,1),r()},all:function(){return o.length||n(),o},clear:function(){t.removeItem(e),n()},length:function(){return o.length},getKeyAt:function(e){return o[e]}}}t.createIndex=r,t.createStorageWrapper=n,e.tote=t}(window);